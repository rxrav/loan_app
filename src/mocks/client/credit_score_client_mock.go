// Code generated by MockGen. DO NOT EDIT.
// Source: .\src\client\credit_score_client.go

// Package mock_client is a generated GoMock package.
package mock_client

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCreditScoreClient is a mock of CreditScoreClient interface.
type MockCreditScoreClient struct {
	ctrl     *gomock.Controller
	recorder *MockCreditScoreClientMockRecorder
}

// MockCreditScoreClientMockRecorder is the mock recorder for MockCreditScoreClient.
type MockCreditScoreClientMockRecorder struct {
	mock *MockCreditScoreClient
}

// NewMockCreditScoreClient creates a new mock instance.
func NewMockCreditScoreClient(ctrl *gomock.Controller) *MockCreditScoreClient {
	mock := &MockCreditScoreClient{ctrl: ctrl}
	mock.recorder = &MockCreditScoreClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreditScoreClient) EXPECT() *MockCreditScoreClientMockRecorder {
	return m.recorder
}

// GetScore mocks base method.
func (m *MockCreditScoreClient) GetScore(userID string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetScore", userID)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetScore indicates an expected call of GetScore.
func (mr *MockCreditScoreClientMockRecorder) GetScore(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetScore", reflect.TypeOf((*MockCreditScoreClient)(nil).GetScore), userID)
}
